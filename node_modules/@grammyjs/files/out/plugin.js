"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.hydrateFiles = void 0;
const files_js_1 = require("./files.js");
/**
 * Plugin that hydrates results to `getFile`, and equips the results with
 * methods to download files, or get their URL/path.
 *
 * This plugin is an [API transformer
 * function](https://grammy.dev/advanced/transformers.html) that can be
 * installed on `bot.api`.
 *
 * ```ts
 * bot.api.config.use(hydrateFiles(bot.token))
 * ```
 *
 * Check out [the official plugin
 * documentation](https://grammy.dev/plugins/files.html) on the grammY webiste.
 *
 * @param token bot token, use `bot.token`
 * @param options optional configuration
 */
function hydrateFiles(token, options) {
    var _a, _b;
    const root = (_a = options === null || options === void 0 ? void 0 : options.apiRoot) !== null && _a !== void 0 ? _a : "https://api.telegram.org";
    const buildFileUrl = (_b = options === null || options === void 0 ? void 0 : options.buildFileUrl) !== null && _b !== void 0 ? _b : ((root, token, path) => `${root}/file/bot${token}/${path}`);
    const buildLink = (path) => buildFileUrl(root, token, path);
    const t = async (prev, method, payload, signal) => {
        const res = await prev(method, payload, signal);
        if (res.ok && isFile(res.result)) {
            (0, files_js_1.installFileMethods)(res.result, buildLink);
        }
        return res;
    };
    return t;
}
exports.hydrateFiles = hydrateFiles;
function isFile(val) {
    return typeof val === "object" && val !== null && "file_id" in val;
}
